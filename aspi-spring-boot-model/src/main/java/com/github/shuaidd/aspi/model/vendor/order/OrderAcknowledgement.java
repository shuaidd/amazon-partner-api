/*
 * Selling Partner API for Retail Procurement Orders
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.shuaidd.aspi.model.vendor.order;

import com.google.gson.annotations.SerializedName;

import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * OrderAcknowledgement
 */
public class OrderAcknowledgement {
  @SerializedName("purchaseOrderNumber")
  private String purchaseOrderNumber = null;

  @SerializedName("sellingParty")
  private PartyIdentification sellingParty = null;

  @SerializedName("acknowledgementDate")
  private OffsetDateTime acknowledgementDate = null;

  @SerializedName("items")
  private List<OrderAcknowledgementItem> items = new ArrayList<OrderAcknowledgementItem>();

  public OrderAcknowledgement purchaseOrderNumber(String purchaseOrderNumber) {
    this.purchaseOrderNumber = purchaseOrderNumber;
    return this;
  }

   /**
   * The purchase order number. Formatting Notes: 8-character alpha-numeric code.
   * @return purchaseOrderNumber
  **/

  public String getPurchaseOrderNumber() {
    return purchaseOrderNumber;
  }

  public void setPurchaseOrderNumber(String purchaseOrderNumber) {
    this.purchaseOrderNumber = purchaseOrderNumber;
  }

  public OrderAcknowledgement sellingParty(PartyIdentification sellingParty) {
    this.sellingParty = sellingParty;
    return this;
  }

   /**
   * Name, address and tax details of the party receiving a shipment of products.
   * @return sellingParty
  **/

  public PartyIdentification getSellingParty() {
    return sellingParty;
  }

  public void setSellingParty(PartyIdentification sellingParty) {
    this.sellingParty = sellingParty;
  }

  public OrderAcknowledgement acknowledgementDate(OffsetDateTime acknowledgementDate) {
    this.acknowledgementDate = acknowledgementDate;
    return this;
  }

   /**
   * The date and time when the purchase order is acknowledged, in ISO-8601 date/time format.
   * @return acknowledgementDate
  **/

  public OffsetDateTime getAcknowledgementDate() {
    return acknowledgementDate;
  }

  public void setAcknowledgementDate(OffsetDateTime acknowledgementDate) {
    this.acknowledgementDate = acknowledgementDate;
  }

  public OrderAcknowledgement items(List<OrderAcknowledgementItem> items) {
    this.items = items;
    return this;
  }

  public OrderAcknowledgement addItemsItem(OrderAcknowledgementItem itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * A list of the items being acknowledged with associated details.
   * @return items
  **/

  public List<OrderAcknowledgementItem> getItems() {
    return items;
  }

  public void setItems(List<OrderAcknowledgementItem> items) {
    this.items = items;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderAcknowledgement orderAcknowledgement = (OrderAcknowledgement) o;
    return Objects.equals(this.purchaseOrderNumber, orderAcknowledgement.purchaseOrderNumber) &&
        Objects.equals(this.sellingParty, orderAcknowledgement.sellingParty) &&
        Objects.equals(this.acknowledgementDate, orderAcknowledgement.acknowledgementDate) &&
        Objects.equals(this.items, orderAcknowledgement.items);
  }

  @Override
  public int hashCode() {
    return Objects.hash(purchaseOrderNumber, sellingParty, acknowledgementDate, items);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderAcknowledgement {\n");

    sb.append("    purchaseOrderNumber: ").append(toIndentedString(purchaseOrderNumber)).append("\n");
    sb.append("    sellingParty: ").append(toIndentedString(sellingParty)).append("\n");
    sb.append("    acknowledgementDate: ").append(toIndentedString(acknowledgementDate)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

