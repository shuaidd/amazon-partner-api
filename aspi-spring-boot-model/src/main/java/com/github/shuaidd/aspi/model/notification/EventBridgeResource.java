/*
 * Selling Partner API for Notifications
 * The Selling Partner API for Notifications lets you subscribe to notifications that are relevant to a selling partner's business. Using this API you can create a destination to receive notifications, subscribe to notifications, delete notification subscriptions, and more.  For more information, see the [Notifications Use Case Guide](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/use-case-guides/notifications-api-use-case-guide/notifications-use-case-guide-v1.md)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.shuaidd.aspi.model.notification;

import com.google.gson.annotations.SerializedName;


import java.util.Objects;

/**
 * Represents an Amazon EventBridge destination.
 */


public class EventBridgeResource {
  @SerializedName("name")
  private String name = null;

  @SerializedName("region")
  private String region = null;

  @SerializedName("accountId")
  private String accountId = null;

  public EventBridgeResource name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the partner event source associated with the destination.
   * @return name
  **/

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EventBridgeResource region(String region) {
    this.region = region;
    return this;
  }

   /**
   * The AWS region in which you receive the notifications. For AWS regions that are supported in Amazon EventBridge, see https://docs.aws.amazon.com/general/latest/gr/ev.html.
   * @return region
  **/

  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public EventBridgeResource accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The identifier for the AWS account that is responsible for charges related to receiving notifications.
   * @return accountId
  **/

  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventBridgeResource eventBridgeResource = (EventBridgeResource) o;
    return Objects.equals(this.name, eventBridgeResource.name) &&
        Objects.equals(this.region, eventBridgeResource.region) &&
        Objects.equals(this.accountId, eventBridgeResource.accountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, region, accountId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventBridgeResource {\n");

    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

