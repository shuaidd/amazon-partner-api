/*
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * OpenAPI spec version: v0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.shuaidd.aspi.model.product.price;

import com.google.gson.annotations.SerializedName;


import java.util.Objects;

/**
 * OfferType
 */
public class OfferType {
  @SerializedName("BuyingPrice")
  private PriceType buyingPrice = null;

  @SerializedName("RegularPrice")
  private MoneyType regularPrice = null;

  @SerializedName("FulfillmentChannel")
  private String fulfillmentChannel = null;

  @SerializedName("ItemCondition")
  private String itemCondition = null;

  @SerializedName("ItemSubCondition")
  private String itemSubCondition = null;

  @SerializedName("SellerSKU")
  private String sellerSKU = null;

  public OfferType buyingPrice(PriceType buyingPrice) {
    this.buyingPrice = buyingPrice;
    return this;
  }

   /**
   * Contains pricing information that includes promotions and contains the shipping cost.
   * @return buyingPrice
  **/

  public PriceType getBuyingPrice() {
    return buyingPrice;
  }

  public void setBuyingPrice(PriceType buyingPrice) {
    this.buyingPrice = buyingPrice;
  }

  public OfferType regularPrice(MoneyType regularPrice) {
    this.regularPrice = regularPrice;
    return this;
  }

   /**
   * The current price excluding any promotions that apply to the product. Excludes the shipping cost.
   * @return regularPrice
  **/

  public MoneyType getRegularPrice() {
    return regularPrice;
  }

  public void setRegularPrice(MoneyType regularPrice) {
    this.regularPrice = regularPrice;
  }

  public OfferType fulfillmentChannel(String fulfillmentChannel) {
    this.fulfillmentChannel = fulfillmentChannel;
    return this;
  }

   /**
   * The fulfillment channel for the offer listing. Possible values:  * Amazon - Fulfilled by Amazon. * Merchant - Fulfilled by the seller.
   * @return fulfillmentChannel
  **/

  public String getFulfillmentChannel() {
    return fulfillmentChannel;
  }

  public void setFulfillmentChannel(String fulfillmentChannel) {
    this.fulfillmentChannel = fulfillmentChannel;
  }

  public OfferType itemCondition(String itemCondition) {
    this.itemCondition = itemCondition;
    return this;
  }

   /**
   * The item condition for the offer listing. Possible values: New, Used, Collectible, Refurbished, or Club.
   * @return itemCondition
  **/

  public String getItemCondition() {
    return itemCondition;
  }

  public void setItemCondition(String itemCondition) {
    this.itemCondition = itemCondition;
  }

  public OfferType itemSubCondition(String itemSubCondition) {
    this.itemSubCondition = itemSubCondition;
    return this;
  }

   /**
   * The item subcondition for the offer listing. Possible values: New, Mint, Very Good, Good, Acceptable, Poor, Club, OEM, Warranty, Refurbished Warranty, Refurbished, Open Box, or Other.
   * @return itemSubCondition
  **/

  public String getItemSubCondition() {
    return itemSubCondition;
  }

  public void setItemSubCondition(String itemSubCondition) {
    this.itemSubCondition = itemSubCondition;
  }

  public OfferType sellerSKU(String sellerSKU) {
    this.sellerSKU = sellerSKU;
    return this;
  }

   /**
   * The seller stock keeping unit (SKU) of the item.
   * @return sellerSKU
  **/

  public String getSellerSKU() {
    return sellerSKU;
  }

  public void setSellerSKU(String sellerSKU) {
    this.sellerSKU = sellerSKU;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferType offerType = (OfferType) o;
    return Objects.equals(this.buyingPrice, offerType.buyingPrice) &&
        Objects.equals(this.regularPrice, offerType.regularPrice) &&
        Objects.equals(this.fulfillmentChannel, offerType.fulfillmentChannel) &&
        Objects.equals(this.itemCondition, offerType.itemCondition) &&
        Objects.equals(this.itemSubCondition, offerType.itemSubCondition) &&
        Objects.equals(this.sellerSKU, offerType.sellerSKU);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buyingPrice, regularPrice, fulfillmentChannel, itemCondition, itemSubCondition, sellerSKU);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferType {\n");

    sb.append("    buyingPrice: ").append(toIndentedString(buyingPrice)).append("\n");
    sb.append("    regularPrice: ").append(toIndentedString(regularPrice)).append("\n");
    sb.append("    fulfillmentChannel: ").append(toIndentedString(fulfillmentChannel)).append("\n");
    sb.append("    itemCondition: ").append(toIndentedString(itemCondition)).append("\n");
    sb.append("    itemSubCondition: ").append(toIndentedString(itemSubCondition)).append("\n");
    sb.append("    sellerSKU: ").append(toIndentedString(sellerSKU)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

