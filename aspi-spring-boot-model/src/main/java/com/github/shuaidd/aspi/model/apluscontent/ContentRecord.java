/*
 * Selling Partner API for A+ Content Management
 * With the A+ Content API, you can build applications that help selling partners add rich marketing content to their Amazon product detail pages. A+ content helps selling partners share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners assemble content by choosing from content modules and adding images and text.
 *
 * OpenAPI spec version: 2020-11-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.shuaidd.aspi.model.apluscontent;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

/**
 * A content document with additional information for content management.
 */

public class ContentRecord {
  @SerializedName("contentReferenceKey")
  private String contentReferenceKey = null;

  @SerializedName("contentMetadata")
  private ContentMetadata contentMetadata = null;

  @SerializedName("contentDocument")
  private ContentDocument contentDocument = null;

  public ContentRecord contentReferenceKey(String contentReferenceKey) {
    this.contentReferenceKey = contentReferenceKey;
    return this;
  }

   /**
   * Get contentReferenceKey
   * @return contentReferenceKey
  **/

  public String getContentReferenceKey() {
    return contentReferenceKey;
  }

  public void setContentReferenceKey(String contentReferenceKey) {
    this.contentReferenceKey = contentReferenceKey;
  }

  public ContentRecord contentMetadata(ContentMetadata contentMetadata) {
    this.contentMetadata = contentMetadata;
    return this;
  }

   /**
   * Get contentMetadata
   * @return contentMetadata
  **/

  public ContentMetadata getContentMetadata() {
    return contentMetadata;
  }

  public void setContentMetadata(ContentMetadata contentMetadata) {
    this.contentMetadata = contentMetadata;
  }

  public ContentRecord contentDocument(ContentDocument contentDocument) {
    this.contentDocument = contentDocument;
    return this;
  }

   /**
   * Get contentDocument
   * @return contentDocument
  **/

  public ContentDocument getContentDocument() {
    return contentDocument;
  }

  public void setContentDocument(ContentDocument contentDocument) {
    this.contentDocument = contentDocument;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentRecord contentRecord = (ContentRecord) o;
    return Objects.equals(this.contentReferenceKey, contentRecord.contentReferenceKey) &&
        Objects.equals(this.contentMetadata, contentRecord.contentMetadata) &&
        Objects.equals(this.contentDocument, contentRecord.contentDocument);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentReferenceKey, contentMetadata, contentDocument);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentRecord {\n");

    sb.append("    contentReferenceKey: ").append(toIndentedString(contentReferenceKey)).append("\n");
    sb.append("    contentMetadata: ").append(toIndentedString(contentMetadata)).append("\n");
    sb.append("    contentDocument: ").append(toIndentedString(contentDocument)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

