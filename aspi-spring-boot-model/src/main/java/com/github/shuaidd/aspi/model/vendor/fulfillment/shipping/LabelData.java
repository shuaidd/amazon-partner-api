/*
 * Selling Partner API for Direct Fulfillment Shipping
 * The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.shuaidd.aspi.model.vendor.fulfillment.shipping;

import com.google.gson.annotations.SerializedName;
import java.util.Objects;

/**
 * Details of the shipment label.
 */

public class LabelData {
  @SerializedName("packageIdentifier")
  private String packageIdentifier = null;

  @SerializedName("trackingNumber")
  private String trackingNumber = null;

  @SerializedName("shipMethod")
  private String shipMethod = null;

  @SerializedName("shipMethodName")
  private String shipMethodName = null;

  @SerializedName("content")
  private String content = null;

  public LabelData packageIdentifier(String packageIdentifier) {
    this.packageIdentifier = packageIdentifier;
    return this;
  }

   /**
   * Identifier for the package. The first package will be 001, the second 002, and so on. This number is used as a reference to refer to this package from the pallet level.
   * @return packageIdentifier
  **/

  public String getPackageIdentifier() {
    return packageIdentifier;
  }

  public void setPackageIdentifier(String packageIdentifier) {
    this.packageIdentifier = packageIdentifier;
  }

  public LabelData trackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
    return this;
  }

   /**
   * Package tracking identifier from the shipping carrier.
   * @return trackingNumber
  **/

  public String getTrackingNumber() {
    return trackingNumber;
  }

  public void setTrackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
  }

  public LabelData shipMethod(String shipMethod) {
    this.shipMethod = shipMethod;
    return this;
  }

   /**
   * Ship method to be used for shipping the order. Amazon defines Ship Method Codes indicating shipping carrier and shipment service level. Ship Method Codes are case and format sensitive. The same ship method code should returned on the shipment confirmation. Note that the Ship Method Codes are vendor specific and will be provided to each vendor during the implementation.
   * @return shipMethod
  **/

  public String getShipMethod() {
    return shipMethod;
  }

  public void setShipMethod(String shipMethod) {
    this.shipMethod = shipMethod;
  }

  public LabelData shipMethodName(String shipMethodName) {
    this.shipMethodName = shipMethodName;
    return this;
  }

   /**
   * Shipping method name for internal reference.
   * @return shipMethodName
  **/

  public String getShipMethodName() {
    return shipMethodName;
  }

  public void setShipMethodName(String shipMethodName) {
    this.shipMethodName = shipMethodName;
  }

  public LabelData content(String content) {
    this.content = content;
    return this;
  }

   /**
   * This field will contain the Base64encoded string of the shipment label content.
   * @return content
  **/

  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LabelData labelData = (LabelData) o;
    return Objects.equals(this.packageIdentifier, labelData.packageIdentifier) &&
        Objects.equals(this.trackingNumber, labelData.trackingNumber) &&
        Objects.equals(this.shipMethod, labelData.shipMethod) &&
        Objects.equals(this.shipMethodName, labelData.shipMethodName) &&
        Objects.equals(this.content, labelData.content);
  }

  @Override
  public int hashCode() {
    return Objects.hash(packageIdentifier, trackingNumber, shipMethod, shipMethodName, content);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LabelData {\n");

    sb.append("    packageIdentifier: ").append(toIndentedString(packageIdentifier)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    shipMethod: ").append(toIndentedString(shipMethod)).append("\n");
    sb.append("    shipMethodName: ").append(toIndentedString(shipMethodName)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

