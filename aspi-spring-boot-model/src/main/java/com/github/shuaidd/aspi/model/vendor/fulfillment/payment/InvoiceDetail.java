/*
 * Selling Partner API for Direct Fulfillment Payments
 * The Selling Partner API for Direct Fulfillment Payments provides programmatic access to a direct fulfillment vendor's invoice data.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.shuaidd.aspi.model.vendor.fulfillment.payment;

import com.google.gson.annotations.SerializedName;




import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * InvoiceDetail
 */
public class InvoiceDetail {
  @SerializedName("invoiceNumber")
  private String invoiceNumber = null;

  @SerializedName("invoiceDate")
  private OffsetDateTime invoiceDate = null;

  @SerializedName("referenceNumber")
  private String referenceNumber = null;

  @SerializedName("remitToParty")
  private PartyIdentification remitToParty = null;

  @SerializedName("shipFromParty")
  private PartyIdentification shipFromParty = null;

  @SerializedName("billToParty")
  private PartyIdentification billToParty = null;

  @SerializedName("shipToCountryCode")
  private String shipToCountryCode = null;

  @SerializedName("paymentTermsCode")
  private String paymentTermsCode = null;

  @SerializedName("invoiceTotal")
  private Money invoiceTotal = null;

  @SerializedName("taxTotals")
  private List<TaxDetail> taxTotals = null;

  @SerializedName("additionalDetails")
  private List<AdditionalDetails> additionalDetails = null;

  @SerializedName("chargeDetails")
  private List<ChargeDetails> chargeDetails = null;

  @SerializedName("items")
  private List<InvoiceItem> items = new ArrayList<InvoiceItem>();

  public InvoiceDetail invoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

   /**
   * The unique invoice number.
   * @return invoiceNumber
  **/

  public String getInvoiceNumber() {
    return invoiceNumber;
  }

  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }

  public InvoiceDetail invoiceDate(OffsetDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
    return this;
  }

   /**
   * Invoice date.
   * @return invoiceDate
  **/

  public OffsetDateTime getInvoiceDate() {
    return invoiceDate;
  }

  public void setInvoiceDate(OffsetDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
  }

  public InvoiceDetail referenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * An additional unique reference number used for regulatory or other purposes.
   * @return referenceNumber
  **/

  public String getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }

  public InvoiceDetail remitToParty(PartyIdentification remitToParty) {
    this.remitToParty = remitToParty;
    return this;
  }

   /**
   * Name, address and tax details of the party receiving the payment of this invoice.
   * @return remitToParty
  **/

  public PartyIdentification getRemitToParty() {
    return remitToParty;
  }

  public void setRemitToParty(PartyIdentification remitToParty) {
    this.remitToParty = remitToParty;
  }

  public InvoiceDetail shipFromParty(PartyIdentification shipFromParty) {
    this.shipFromParty = shipFromParty;
    return this;
  }

   /**
   * Warehouse code of the vendor as in the order.
   * @return shipFromParty
  **/

  public PartyIdentification getShipFromParty() {
    return shipFromParty;
  }

  public void setShipFromParty(PartyIdentification shipFromParty) {
    this.shipFromParty = shipFromParty;
  }

  public InvoiceDetail billToParty(PartyIdentification billToParty) {
    this.billToParty = billToParty;
    return this;
  }

   /**
   * Name, address and tax details of the party to whom this invoice is issued.
   * @return billToParty
  **/

  public PartyIdentification getBillToParty() {
    return billToParty;
  }

  public void setBillToParty(PartyIdentification billToParty) {
    this.billToParty = billToParty;
  }

  public InvoiceDetail shipToCountryCode(String shipToCountryCode) {
    this.shipToCountryCode = shipToCountryCode;
    return this;
  }

   /**
   * Ship-to country code.
   * @return shipToCountryCode
  **/

  public String getShipToCountryCode() {
    return shipToCountryCode;
  }

  public void setShipToCountryCode(String shipToCountryCode) {
    this.shipToCountryCode = shipToCountryCode;
  }

  public InvoiceDetail paymentTermsCode(String paymentTermsCode) {
    this.paymentTermsCode = paymentTermsCode;
    return this;
  }

   /**
   * The payment terms for the invoice.
   * @return paymentTermsCode
  **/

  public String getPaymentTermsCode() {
    return paymentTermsCode;
  }

  public void setPaymentTermsCode(String paymentTermsCode) {
    this.paymentTermsCode = paymentTermsCode;
  }

  public InvoiceDetail invoiceTotal(Money invoiceTotal) {
    this.invoiceTotal = invoiceTotal;
    return this;
  }

   /**
   * Total amount details of the invoice.
   * @return invoiceTotal
  **/

  public Money getInvoiceTotal() {
    return invoiceTotal;
  }

  public void setInvoiceTotal(Money invoiceTotal) {
    this.invoiceTotal = invoiceTotal;
  }

  public InvoiceDetail taxTotals(List<TaxDetail> taxTotals) {
    this.taxTotals = taxTotals;
    return this;
  }

  public InvoiceDetail addTaxTotalsItem(TaxDetail taxTotalsItem) {
    if (this.taxTotals == null) {
      this.taxTotals = new ArrayList<TaxDetail>();
    }
    this.taxTotals.add(taxTotalsItem);
    return this;
  }

   /**
   * Individual tax details per line item.
   * @return taxTotals
  **/

  public List<TaxDetail> getTaxTotals() {
    return taxTotals;
  }

  public void setTaxTotals(List<TaxDetail> taxTotals) {
    this.taxTotals = taxTotals;
  }

  public InvoiceDetail additionalDetails(List<AdditionalDetails> additionalDetails) {
    this.additionalDetails = additionalDetails;
    return this;
  }

  public InvoiceDetail addAdditionalDetailsItem(AdditionalDetails additionalDetailsItem) {
    if (this.additionalDetails == null) {
      this.additionalDetails = new ArrayList<AdditionalDetails>();
    }
    this.additionalDetails.add(additionalDetailsItem);
    return this;
  }

   /**
   * Additional details provided by the selling party, for tax related or other purposes.
   * @return additionalDetails
  **/

  public List<AdditionalDetails> getAdditionalDetails() {
    return additionalDetails;
  }

  public void setAdditionalDetails(List<AdditionalDetails> additionalDetails) {
    this.additionalDetails = additionalDetails;
  }

  public InvoiceDetail chargeDetails(List<ChargeDetails> chargeDetails) {
    this.chargeDetails = chargeDetails;
    return this;
  }

  public InvoiceDetail addChargeDetailsItem(ChargeDetails chargeDetailsItem) {
    if (this.chargeDetails == null) {
      this.chargeDetails = new ArrayList<ChargeDetails>();
    }
    this.chargeDetails.add(chargeDetailsItem);
    return this;
  }

   /**
   * Total charge amount details for all line items.
   * @return chargeDetails
  **/

  public List<ChargeDetails> getChargeDetails() {
    return chargeDetails;
  }

  public void setChargeDetails(List<ChargeDetails> chargeDetails) {
    this.chargeDetails = chargeDetails;
  }

  public InvoiceDetail items(List<InvoiceItem> items) {
    this.items = items;
    return this;
  }

  public InvoiceDetail addItemsItem(InvoiceItem itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Provides the details of the items in this invoice.
   * @return items
  **/

  public List<InvoiceItem> getItems() {
    return items;
  }

  public void setItems(List<InvoiceItem> items) {
    this.items = items;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceDetail invoiceDetail = (InvoiceDetail) o;
    return Objects.equals(this.invoiceNumber, invoiceDetail.invoiceNumber) &&
        Objects.equals(this.invoiceDate, invoiceDetail.invoiceDate) &&
        Objects.equals(this.referenceNumber, invoiceDetail.referenceNumber) &&
        Objects.equals(this.remitToParty, invoiceDetail.remitToParty) &&
        Objects.equals(this.shipFromParty, invoiceDetail.shipFromParty) &&
        Objects.equals(this.billToParty, invoiceDetail.billToParty) &&
        Objects.equals(this.shipToCountryCode, invoiceDetail.shipToCountryCode) &&
        Objects.equals(this.paymentTermsCode, invoiceDetail.paymentTermsCode) &&
        Objects.equals(this.invoiceTotal, invoiceDetail.invoiceTotal) &&
        Objects.equals(this.taxTotals, invoiceDetail.taxTotals) &&
        Objects.equals(this.additionalDetails, invoiceDetail.additionalDetails) &&
        Objects.equals(this.chargeDetails, invoiceDetail.chargeDetails) &&
        Objects.equals(this.items, invoiceDetail.items);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceNumber, invoiceDate, referenceNumber, remitToParty, shipFromParty, billToParty, shipToCountryCode, paymentTermsCode, invoiceTotal, taxTotals, additionalDetails, chargeDetails, items);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceDetail {\n");

    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    invoiceDate: ").append(toIndentedString(invoiceDate)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    remitToParty: ").append(toIndentedString(remitToParty)).append("\n");
    sb.append("    shipFromParty: ").append(toIndentedString(shipFromParty)).append("\n");
    sb.append("    billToParty: ").append(toIndentedString(billToParty)).append("\n");
    sb.append("    shipToCountryCode: ").append(toIndentedString(shipToCountryCode)).append("\n");
    sb.append("    paymentTermsCode: ").append(toIndentedString(paymentTermsCode)).append("\n");
    sb.append("    invoiceTotal: ").append(toIndentedString(invoiceTotal)).append("\n");
    sb.append("    taxTotals: ").append(toIndentedString(taxTotals)).append("\n");
    sb.append("    additionalDetails: ").append(toIndentedString(additionalDetails)).append("\n");
    sb.append("    chargeDetails: ").append(toIndentedString(chargeDetails)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

