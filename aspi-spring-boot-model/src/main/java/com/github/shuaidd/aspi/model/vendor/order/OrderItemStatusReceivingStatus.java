/*
 * Selling Partner API for Retail Procurement Orders
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.shuaidd.aspi.model.vendor.order;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.Objects;

/**
 * Item receive status at the buyer&#39;s warehouse.
 */

public class OrderItemStatusReceivingStatus {
  /**
   * Receive status of the line item.
   */
  @JsonAdapter(ReceiveStatusEnum.Adapter.class)
  public enum ReceiveStatusEnum {
    NOT_RECEIVED("NOT_RECEIVED"),

    PARTIALLY_RECEIVED("PARTIALLY_RECEIVED"),

    RECEIVED("RECEIVED");

    private String value;

    ReceiveStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReceiveStatusEnum fromValue(String text) {
      for (ReceiveStatusEnum b : ReceiveStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ReceiveStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReceiveStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReceiveStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ReceiveStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("receiveStatus")
  private ReceiveStatusEnum receiveStatus = null;

  @SerializedName("receivedQuantity")
  private ItemQuantity receivedQuantity = null;

  @SerializedName("lastReceiveDate")
  private OffsetDateTime lastReceiveDate = null;

  public OrderItemStatusReceivingStatus receiveStatus(ReceiveStatusEnum receiveStatus) {
    this.receiveStatus = receiveStatus;
    return this;
  }

   /**
   * Receive status of the line item.
   * @return receiveStatus
  **/

  public ReceiveStatusEnum getReceiveStatus() {
    return receiveStatus;
  }

  public void setReceiveStatus(ReceiveStatusEnum receiveStatus) {
    this.receiveStatus = receiveStatus;
  }

  public OrderItemStatusReceivingStatus receivedQuantity(ItemQuantity receivedQuantity) {
    this.receivedQuantity = receivedQuantity;
    return this;
  }

   /**
   * The total item quantity received by the buyer so far.
   * @return receivedQuantity
  **/

  public ItemQuantity getReceivedQuantity() {
    return receivedQuantity;
  }

  public void setReceivedQuantity(ItemQuantity receivedQuantity) {
    this.receivedQuantity = receivedQuantity;
  }

  public OrderItemStatusReceivingStatus lastReceiveDate(OffsetDateTime lastReceiveDate) {
    this.lastReceiveDate = lastReceiveDate;
    return this;
  }

   /**
   * The date when the most recent item was received at the buyer&#39;s warehouse. Must be in ISO-8601 date/time format.
   * @return lastReceiveDate
  **/

  public OffsetDateTime getLastReceiveDate() {
    return lastReceiveDate;
  }

  public void setLastReceiveDate(OffsetDateTime lastReceiveDate) {
    this.lastReceiveDate = lastReceiveDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderItemStatusReceivingStatus orderItemStatusReceivingStatus = (OrderItemStatusReceivingStatus) o;
    return Objects.equals(this.receiveStatus, orderItemStatusReceivingStatus.receiveStatus) &&
        Objects.equals(this.receivedQuantity, orderItemStatusReceivingStatus.receivedQuantity) &&
        Objects.equals(this.lastReceiveDate, orderItemStatusReceivingStatus.lastReceiveDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(receiveStatus, receivedQuantity, lastReceiveDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderItemStatusReceivingStatus {\n");

    sb.append("    receiveStatus: ").append(toIndentedString(receiveStatus)).append("\n");
    sb.append("    receivedQuantity: ").append(toIndentedString(receivedQuantity)).append("\n");
    sb.append("    lastReceiveDate: ").append(toIndentedString(lastReceiveDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

