/*
 * Selling Partner API for Services
 * With the Services API, you can build applications that help service providers get and modify their service orders.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.shuaidd.aspi.model.service;

import com.google.gson.annotations.SerializedName;
import java.util.Objects;

/**
 * Information about the service job provider.
 */

public class ServiceJobProvider {
  @SerializedName("serviceJobProviderId")
  private String serviceJobProviderId = null;

  public ServiceJobProvider serviceJobProviderId(String serviceJobProviderId) {
    this.serviceJobProviderId = serviceJobProviderId;
    return this;
  }

   /**
   * The identifier of the service job provider.
   * @return serviceJobProviderId
  **/

  public String getServiceJobProviderId() {
    return serviceJobProviderId;
  }

  public void setServiceJobProviderId(String serviceJobProviderId) {
    this.serviceJobProviderId = serviceJobProviderId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceJobProvider serviceJobProvider = (ServiceJobProvider) o;
    return Objects.equals(this.serviceJobProviderId, serviceJobProvider.serviceJobProviderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceJobProviderId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceJobProvider {\n");

    sb.append("    serviceJobProviderId: ").append(toIndentedString(serviceJobProviderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

