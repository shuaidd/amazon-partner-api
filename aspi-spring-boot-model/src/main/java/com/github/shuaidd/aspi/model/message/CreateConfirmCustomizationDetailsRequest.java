/*
 * Selling Partner API for Messaging
 * With the Messaging API you can build applications that send messages to buyers. You can get a list of message types that are available for an order that you specify, then call an operation that sends a message to the buyer for that order. The Messaging API returns responses that are formed according to the <a href=https://tools.ietf.org/html/draft-kelly-json-hal-08>JSON Hypertext Application Language</a> (HAL) standard.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.shuaidd.aspi.model.message;

import com.google.gson.annotations.SerializedName;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * The request schema for the confirmCustomizationDetails operation.
 */

public class CreateConfirmCustomizationDetailsRequest {
  @SerializedName("text")
  private String text = null;

  @SerializedName("attachments")
  private List<Attachment> attachments = null;

  public CreateConfirmCustomizationDetailsRequest text(String text) {
    this.text = text;
    return this;
  }

   /**
   * The text to be sent to the buyer. Only links related to customization details are allowed. Do not include HTML or email addresses. The text must be written in the buyer&#39;s language of preference, which can be retrieved from the GetAttributes operation.
   * @return text
  **/

  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public CreateConfirmCustomizationDetailsRequest attachments(List<Attachment> attachments) {
    this.attachments = attachments;
    return this;
  }

  public CreateConfirmCustomizationDetailsRequest addAttachmentsItem(Attachment attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<Attachment>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Attachments to include in the message to the buyer.
   * @return attachments
  **/

  public List<Attachment> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<Attachment> attachments) {
    this.attachments = attachments;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateConfirmCustomizationDetailsRequest createConfirmCustomizationDetailsRequest = (CreateConfirmCustomizationDetailsRequest) o;
    return Objects.equals(this.text, createConfirmCustomizationDetailsRequest.text) &&
        Objects.equals(this.attachments, createConfirmCustomizationDetailsRequest.attachments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(text, attachments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateConfirmCustomizationDetailsRequest {\n");

    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

